buildscript {
    repositories {
        mavenCentral()
    }
}

apply plugin: 'com.android.library'

android {
    defaultPublishConfig "debug"

    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("buildToolsVersion")

    defaultConfig {
        minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")
        versionCode globalConfiguration.getAt("androidVersionCode")
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
        disable 'InvalidPackage'  // Some libraries have issues with this
        disable 'OldTargetApi'
    }
}

dependencies {

    def coreDependencies = rootProject.ext.coreDependencies
    def dataDependencies = rootProject.ext.dataDependencies
    def testDependencies = rootProject.ext.coreTestDependencies
//
    implementation project(':domain')
    compileOnly coreDependencies.javaxAnnotation
    implementation coreDependencies.javaxInject
    implementation coreDependencies.rxJava
    implementation coreDependencies.rxAndroid

    implementation dataDependencies.retrofit
    implementation dataDependencies.okhttp
    implementation dataDependencies.okhttpInterceptor
    implementation dataDependencies.jacksonCore
    implementation dataDependencies.jacksonDatabind
//
    testImplementation testDependencies.junit
    testImplementation testDependencies.mockito
}
